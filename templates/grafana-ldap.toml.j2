# Managed by ansible

verbose_logging = false

[[servers]]
host = "{{ grafana_auth_ldap_host |d('') }}"
port = {{ grafana_auth_ldap_port |d(389) }}

use_ssl = false
start_tls = false
ssl_skip_verify = false
# root_ca_cert = "/path/to/certificate.crt"

bind_dn = "uid=%s,cn=users,cn=accounts,{{ grafana_auth_ldap_dc |d('dc=example,dc=com') }}"

# Search user bind password
# If the password contains # or ; you have to wrap it with trippel quotes. Ex """#password;"""
#bind_password = 'x'

# User search filter, for example "(cn=%s)" or "(sAMAccountName=%s)" or "(uid=%s)"
search_filter = "{{ grafana_auth_ldap_search_filter |d('(uid=%s)') }}"
search_base_dns = ["cn=users,cn=accounts,{{ grafana_auth_ldap_dc |d('dc=example,dc=com') }}"]

## Group search filter, to retrieve the groups of which the user is a member (only set if memberOf attribute is not available)
#group_search_filter = "(&(objectClass=groupOfNames)(cn=grafana*))"
## An array of the base DNs to search through for groups. Typically uses ou=groups
group_search_base_dns = ["cn=groups,cn=accounts,{{ grafana_auth_ldap_dc |d('dc=example,dc=com') }}"]

[servers.attributes]
name = "givenName"
surname = "sn"
username = "uid"
member_of = "memberOf"
email =  "email"

############
# Users role
#- Editor: Can create & edit dashboads
#- Viewer: Can not create dashboards nor edit panels
#- Read only editor: Can not create dashboards nor save changes to them,
#  but they can edit panels and create new panels (But not save)

#######################################################
# LDAP Group mapping

{%- for g in grafana_ldap_group_mappings %}
{% if g.orgs_all is defined and g.orgs_all %}
## Mapping ALL Organizations for group {{ g.group_cn }}

{% for o_all in grafana_organizations %}
##########################
[[servers.group_mappings]]
group_dn = "{{ g.group_cn }},{{ grafana_auth_ldap_dc |d('dc=example,dc=com') }}"
{% if g.org_role is defined %}
org_role = "{{ g.org_role |d(org_id_default) }}"
{% endif %}
org_id = {{ o_all.id }}
{%- endfor %}

{% elif g.orgs_name is defined %}

#######################################################
## Mapping each Organization for group {{ g.group_cn }}

{% set org_id_default=1 %}
{% for o in g.orgs_name %}
##########################
[[servers.group_mappings]]
group_dn = "{{ g.group_cn }},{{ grafana_auth_ldap_dc |d('dc=example,dc=com') }}"
{% if g.org_role is defined %}
org_role = "{{ g.org_role |d(org_id_default) }}"
{%- endif %}

{% for o_list in grafana_organizations %}
{% if o_list.name == o %}
org_id = {{ o_list.id }}

{% endif %}
{% endfor %}
{% endfor %}

{% else %}
###################################
## Mapping without Org for group {{ g.group_cn }}

[[servers.group_mappings]]
group_dn = "{{ g.group_cn }},{{ grafana_auth_ldap_dc |d('dc=example,dc=com') }}"
org_role = "{{ g.org_role }}"

{% endif %}
{% endfor %}

##########################
## Default role
[[servers.group_mappings]]
group_dn = "{{ grafana_auth_map_default_group_cn }},{{ grafana_auth_ldap_dc |d('dc=example,dc=com') }}""
org_role = "{{ grafana_auth_map_default_role }}"
